#include <stdio.h>
#include <stdlib.h>
#define tam 10

int a[tam];

void printvet(int vetor[]) {
  int i;
  for(i=0; i<tam; i++) {
    printf("%d ", vetor[i]);
  }
  printf("\n");
}

void merge(int vet[], int a[], int ini, int meio, int fim){
    int idA=ini, idB=meio+1, fimA=meio, fimB=fim;
    int pos=ini,i;

    while(idA<=fimA && idB<=fimB){
        if(vet[idA]<vet[idB]){
            a[pos]=vet[idA];
            idA++;
            pos++;
        }
        else {
            a[pos]=vet[idB];
            idB++;
            pos++;
        }
    }
    if(idA>fimA){
        while(idB<=fimB){
            a[pos]=vet[idB];
            idB++;
            pos++;
        }
    }
    else{
        while(idA<=fimA){
            a[pos]=vet[idA];
            idA++;
            pos++;
        }
    }
    for(i=ini;i<=fim;i++){
        vet[i]=a[i];
    }
}

void mergeSort(int vet[],int ini,int fim){
     int meio;

     if(ini<fim){
        meio= (ini+fim)/2;
        mergeSort(vet,ini,meio);
        mergeSort(vet,meio+1,fim);
        merge(vet,a,ini,meio,fim);
    }
}

int busca(int vet[],int valor){
    int i=0;
    while(i<tam){
        if(vet[i]==valor)
            return i;
        i++;
    }
    return -1;
}




int buscaBinaria (int vet[], int chave, int Tam)
{
     int inf = 0;
     int sup = Tam-1;
     int meio;
     while (inf <= sup)
     {
          meio = (inf + sup)/2;
          if (chave == vet[meio])
               return -meio;           //se encontrou o numero no vetor
          if (chave < vet[meio])
               sup = meio-1;
          else
               inf = meio+1;
     }
     return meio;                   //se não encontrou retorna a posição onde deveria entrar
}





void inserir(int vet[], int valor){
    int i;
    int ind=buscaBinaria(vet,valor,tam);
    if(ind > 0){
        for(i=0; i<ind; i++){
            vet[i]=vet[i+1];
        }
       vet[ind] = valor;
    }
}


void remover(int vet[],int valor){
    int i;
    int ind= buscaBinaria(vet,valor,tam);
    if(ind < 0){
        ind = ind*-1;                            //transforma o indice de volta a positivo
        for(i=0; i<ind; i++){
            vet[i+1] = vet[i];
        }
       vet[0] = 0;
        }

    }



void main(){

    int num,i;
    int *vetor=(int*)calloc(tam,(sizeof(int)));

    FILE *f;
    f=fopen("numeros.txt","r");

    for(i=0;i<(tam/2);i++){
        fscanf(f,"%d\n",&num);
        int existe= busca(vetor,num);
        if (existe==-1)
            vetor[i]=num;

    }

    //printvet(vetor);

    mergeSort(vetor,0,tam-1);

    //printvet(vetor);



    for(i=(tam/2);i<tam;i++){
        int op;
        fscanf(f,"%d\n",&op);
        switch(op){
               case 0:
                fscanf(f,"%d\n",&num);
                inserir(vetor,num);
                break;
               case 1:
                fscanf(f,"%d\n",&num);
                remover(vetor,num);
                break;
        }

    }


    printvet(vetor);
    free(vetor);
    fclose(f);
}
