#include <stdlib.h>
#include <stdio.h>
#define tam 1000000

typedef struct{
    int vetor[tam];
    int qnt;
} Vetor;

void inserir(Vetor *vet, int valor){
    if(vet->qnt == tam)
        return;

    int a = 0;

    for(int i = 0; i < vet->qnt; i++){
        if(valor < vet->vetor[i]){
            a = i;
            break;
        }
    }
    for(int i = vet->qnt; i >= a; i--){
        vet->vetor[i+1] = vet->vetor[i];
    }
    vet->vetor[a] = valor;
    vet->qnt++;
}

void remover(Vetor *vet, int valor){
    if(vet->qnt == 0)
        return;
    int a = -1;
    for(int i = 0; i < vet->qnt; i++){
        if(vet->vetor[i] == valor)
            a = i;
    }

    if(a == -1)
        return;

    for(int i = a; i < vet->qnt; i++){
        vet->vetor[i] = vet->vetor[i+1];
    }
    vet->qnt--;
}

void printvet(Vetor *vet){
    int i;
    for(i = 0; i < vet->qnt; i++){
        printf("%d ", vet->vetor[i]);
    }
    printf("\n");
}

int main(){
    Vetor *vet = (Vetor*)malloc(sizeof(Vetor));
    vet->qnt = 0;
    FILE *f = fopen("numeros.txt", "r");
    int i;
    for(i = 0; i < tam/2; i++){
        int a;
        fscanf(f, "%d", &a);
        inserir(vet, a);
    }
    for(i = 0; i < tam/2; i++){

        int a, b;
        fscanf(f, "%d %d", &a, &b);

        switch(a){
            case 0: inserir(vet, b); break;
            case 1: remover(vet, b); break;
        }
    }
   // printvet(vet);
}

